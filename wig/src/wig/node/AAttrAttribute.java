/* This file was generated by SableCC (http://www.sablecc.org/). */

package wig.node;

import wig.analysis.*;

@SuppressWarnings("nls")
public final class AAttrAttribute extends PAttribute
{
    private PAttr _attr_;

    public AAttrAttribute()
    {
        // Constructor
    }

    public AAttrAttribute(
        @SuppressWarnings("hiding") PAttr _attr_)
    {
        // Constructor
        setAttr(_attr_);

    }

    @Override
    public Object clone()
    {
        return new AAttrAttribute(
            cloneNode(this._attr_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAttrAttribute(this);
    }

    public PAttr getAttr()
    {
        return this._attr_;
    }

    public void setAttr(PAttr node)
    {
        if(this._attr_ != null)
        {
            this._attr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._attr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._attr_ == child)
        {
            this._attr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._attr_ == oldChild)
        {
            setAttr((PAttr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
