/* This file was generated by SableCC (http://www.sablecc.org/). */

package wig.lexer;

import java.io.*;
import wig.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.WIG_SCOPE;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                                case 0: state = State.HTML_SCOPE; break;
                            }
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                            }
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.WIG_SCOPE; break;
                                case 2: state = State.HTML_SCOPE; break;
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_TAG_SCOPE; break;
                            }
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                                case 3: state = State.HTML_TAG_SCOPE; break;
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                            }
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                            }
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 3: state = State.HTML_TAG_SCOPE; break;
                            }
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 3: state = State.HTML_TAG_SCOPE; break;
                            }
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 3: state = State.HTML_TAG_SCOPE; break;
                            }
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 3: state = State.HTML_TAG_SCOPE; break;
                            }
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                                case 3: state = State.HTML_TAG_SCOPE; break;
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.WIG_SCOPE; break;
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                                case 2: state = State.HTML_SCOPE; break;
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.WHATEVER_SCOPE; break;
                                case 3: state = State.WHATEVER_SCOPE; break;
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                                case 2: state = State.HTML_SCOPE; break;
                            }
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                                case 2: state = State.HOLE_SCOPE; break;
                            }
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 4: state = State.WHATEVER_SCOPE; break;
                                case 1: state = State.HTML_SCOPE; break;
                            }
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                                case 3: state = State.HTML_TAG_SCOPE; break;
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                                case 3: state = State.HTML_TAG_SCOPE; break;
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 64:
                        {
                            @SuppressWarnings("hiding") Token token = new64(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 4: state = State.HOLE_SCOPE; break;
                                case 1: state = State.HTML_SCOPE; break;
                                case 3: state = State.HTML_TAG_SCOPE; break;
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 65:
                        {
                            @SuppressWarnings("hiding") Token token = new65(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.HTML_SCOPE; break;
                                case 3: state = State.HTML_TAG_SCOPE; break;
                                case 0: state = State.WIG_SCOPE; break;
                            }
                            return token;
                        }
                    case 66:
                        {
                            @SuppressWarnings("hiding") Token token = new66(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 2: state = State.WHATEVER_SCOPE; break;
                            }
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TService(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THtml(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THtmlTagStart(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSchema(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSession(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShow(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TExit(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturn(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlug(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReceive(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInt(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBool(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVoid(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTuple(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTrue(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalse(line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMeta(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THtmlTagEnd(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInput(line, pos); }
    Token new24(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPosIntconst(text, line, pos); }
    Token new25(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNegIntconst(text, line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSelect(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TType(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TName(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TText(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRadio(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLtSlash(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLtBracket(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGtBracket(line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBracket(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBracket(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeep(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRemove(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TJoin(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNeq(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLteq(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGteq(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNot(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(line, pos); }
    Token new60(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(line, pos); }
    Token new61(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new62(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEol(text, line, pos); }
    Token new63(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new64(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }
    Token new65(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringconst(text, line, pos); }
    Token new66(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhatever(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // WIG_SCOPE
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {34, 34, 6}, {37, 37, 7}, {38, 38, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 48, 17}, {49, 57, 18}, {59, 59, 19}, {60, 60, 20}, {61, 61, 21}, {62, 62, 22}, {65, 90, 23}, {91, 91, 24}, {92, 92, 25}, {93, 93, 26}, {95, 95, 27}, {97, 97, 23}, {98, 98, 28}, {99, 99, 29}, {100, 100, 23}, {101, 101, 30}, {102, 102, 31}, {103, 103, 23}, {104, 104, 32}, {105, 105, 33}, {106, 111, 23}, {112, 112, 34}, {113, 113, 23}, {114, 114, 35}, {115, 115, 36}, {116, 116, 37}, {117, 117, 23}, {118, 118, 38}, {119, 119, 39}, {120, 122, 23}, {123, 123, 40}, {124, 124, 41}, {125, 125, 42}, },
            {{9, 9, 1}, {10, 10, 43}, {13, 13, 44}, {32, 32, 4}, },
            {{9, 32, -3}, },
            {{9, 9, 1}, {10, 10, 45}, {13, 32, -3}, },
            {{9, 32, -3}, },
            {{61, 61, 46}, },
            {{0, 33, 47}, {34, 34, 48}, {35, 91, 47}, {92, 92, 49}, {93, 65535, 47}, },
            {},
            {{38, 38, 50}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{42, 42, 51}, {47, 47, 52}, },
            {},
            {{48, 57, 53}, },
            {},
            {{47, 47, 54}, {60, 60, 55}, {61, 61, 56}, {104, 104, 57}, },
            {{61, 61, 58}, },
            {{61, 61, 59}, },
            {{48, 57, 60}, {65, 90, 61}, {95, 95, 62}, {97, 122, 61}, },
            {},
            {{43, 43, 63}, {45, 45, 64}, },
            {},
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 110, 61}, {111, 111, 65}, {112, 122, 61}, },
            {{48, 110, -30}, {111, 111, 66}, {112, 122, 61}, },
            {{48, 95, -25}, {97, 107, 61}, {108, 108, 67}, {109, 119, 61}, {120, 120, 68}, {121, 122, 61}, },
            {{48, 95, -25}, {97, 97, 69}, {98, 122, 61}, },
            {{48, 95, -25}, {97, 115, 61}, {116, 116, 70}, {117, 122, 61}, },
            {{48, 95, -25}, {97, 101, 61}, {102, 102, 71}, {103, 109, 61}, {110, 110, 72}, {111, 122, 61}, },
            {{48, 107, -32}, {108, 108, 73}, {109, 122, 61}, },
            {{48, 95, -25}, {97, 100, 61}, {101, 101, 74}, {102, 122, 61}, },
            {{48, 95, -25}, {97, 98, 61}, {99, 99, 75}, {100, 100, 61}, {101, 101, 76}, {102, 103, 61}, {104, 104, 77}, {105, 115, 61}, {116, 116, 78}, {117, 122, 61}, },
            {{48, 95, -25}, {97, 113, 61}, {114, 114, 79}, {115, 116, 61}, {117, 117, 80}, {118, 122, 61}, },
            {{48, 110, -30}, {111, 111, 81}, {112, 122, 61}, },
            {{48, 95, -25}, {97, 103, 61}, {104, 104, 82}, {105, 122, 61}, },
            {},
            {{124, 124, 83}, },
            {},
            {{9, 32, -3}, },
            {{9, 9, 1}, {10, 10, 84}, {13, 32, -3}, },
            {{9, 32, -3}, },
            {},
            {{0, 65535, -8}, },
            {},
            {{0, 33, 47}, {34, 34, 85}, {35, 65535, -8}, },
            {},
            {{0, 41, 86}, {42, 42, 87}, {43, 65535, 86}, },
            {{0, 9, 88}, {10, 10, 89}, {11, 12, 88}, {13, 13, 90}, {14, 65535, 88}, },
            {{48, 57, 53}, },
            {{104, 104, 91}, },
            {},
            {},
            {{116, 116, 92}, },
            {},
            {},
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {},
            {},
            {{48, 110, -30}, {111, 111, 93}, {112, 122, 61}, },
            {{48, 95, -25}, {97, 109, 61}, {110, 110, 94}, {111, 122, 61}, },
            {{48, 95, -25}, {97, 114, 61}, {115, 115, 95}, {116, 122, 61}, },
            {{48, 95, -25}, {97, 104, 61}, {105, 105, 96}, {106, 122, 61}, },
            {{48, 107, -32}, {108, 108, 97}, {109, 122, 61}, },
            {{48, 95, -25}, {97, 108, 61}, {109, 109, 98}, {110, 122, 61}, },
            {{48, 122, -25}, },
            {{48, 115, -34}, {116, 116, 99}, {117, 122, 61}, },
            {{48, 95, -25}, {97, 116, 61}, {117, 117, 100}, {118, 122, 61}, },
            {{48, 98, -38}, {99, 99, 101}, {100, 115, 61}, {116, 116, 102}, {117, 122, 61}, },
            {{48, 103, -41}, {104, 104, 103}, {105, 122, 61}, },
            {{48, 113, -39}, {114, 114, 104}, {115, 115, 105}, {116, 122, 61}, },
            {{48, 110, -30}, {111, 111, 106}, {112, 122, 61}, },
            {{48, 113, -39}, {114, 114, 107}, {115, 122, 61}, },
            {{48, 116, -75}, {117, 117, 108}, {118, 122, 61}, },
            {{48, 95, -25}, {97, 111, 61}, {112, 112, 109}, {113, 122, 61}, },
            {{48, 104, -70}, {105, 105, 110}, {106, 122, 61}, },
            {{48, 104, -70}, {105, 105, 111}, {106, 122, 61}, },
            {},
            {{9, 32, -3}, },
            {{0, 65535, -8}, },
            {{0, 65535, -53}, },
            {{0, 41, 112}, {42, 42, 87}, {43, 46, 112}, {47, 47, 113}, {48, 65535, 112}, },
            {{0, 65535, -54}, },
            {},
            {{10, 10, 114}, },
            {{116, 116, 115}, },
            {{109, 109, 116}, },
            {{48, 107, -32}, {108, 108, 117}, {109, 122, 61}, },
            {{48, 114, -69}, {115, 115, 118}, {116, 122, 61}, },
            {{48, 100, -37}, {101, 101, 119}, {102, 122, 61}, },
            {{48, 115, -34}, {116, 116, 120}, {117, 122, 61}, },
            {{48, 114, -69}, {115, 115, 121}, {116, 122, 61}, },
            {{48, 107, -32}, {108, 108, 122}, {109, 122, 61}, },
            {{48, 122, -25}, },
            {{48, 95, -25}, {97, 102, 61}, {103, 103, 123}, {104, 122, 61}, },
            {{48, 100, -37}, {101, 101, 124}, {102, 122, 61}, },
            {{48, 116, -75}, {117, 117, 125}, {118, 122, 61}, },
            {{48, 100, -37}, {101, 101, 126}, {102, 122, 61}, },
            {{48, 95, -25}, {97, 117, 61}, {118, 118, 127}, {119, 122, 61}, },
            {{48, 114, -69}, {115, 115, 128}, {116, 122, 61}, },
            {{48, 95, -25}, {97, 118, 61}, {119, 119, 129}, {120, 122, 61}, },
            {{48, 104, -70}, {105, 105, 130}, {106, 122, 61}, },
            {{48, 100, -37}, {101, 101, 131}, {102, 122, 61}, },
            {{48, 107, -32}, {108, 108, 132}, {109, 122, 61}, },
            {{48, 95, -25}, {97, 99, 61}, {100, 100, 133}, {101, 122, 61}, },
            {{48, 107, -32}, {108, 108, 134}, {109, 122, 61}, },
            {{0, 41, 135}, {42, 42, 136}, {43, 65535, 135}, },
            {},
            {},
            {{109, 109, 137}, },
            {{108, 108, 138}, },
            {{48, 122, -25}, },
            {{48, 115, -34}, {116, 116, 139}, {117, 122, 61}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 100, -37}, {101, 101, 140}, {102, 122, 61}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 104, -70}, {105, 105, 141}, {106, 122, 61}, },
            {{48, 113, -39}, {114, 114, 142}, {115, 122, 61}, },
            {{48, 108, -72}, {109, 109, 143}, {110, 122, 61}, },
            {{48, 104, -70}, {105, 105, 144}, {106, 122, 61}, },
            {{48, 104, -70}, {105, 105, 145}, {106, 122, 61}, },
            {{48, 122, -25}, },
            {{48, 109, -68}, {110, 110, 146}, {111, 122, 61}, },
            {{48, 122, -25}, },
            {{48, 100, -37}, {101, 101, 147}, {102, 122, 61}, },
            {{48, 122, -25}, },
            {{48, 100, -37}, {101, 101, 148}, {102, 122, 61}, },
            {{0, 65535, -114}, },
            {{0, 41, 112}, {42, 42, 136}, {43, 65535, -89}, },
            {{108, 108, 149}, },
            {{62, 62, 150}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 117, -106}, {118, 118, 151}, {119, 122, 61}, },
            {{48, 109, -68}, {110, 110, 152}, {111, 122, 61}, },
            {{48, 95, -25}, {97, 97, 153}, {98, 122, 61}, },
            {{48, 98, -38}, {99, 99, 154}, {100, 122, 61}, },
            {{48, 110, -30}, {111, 111, 155}, {112, 122, 61}, },
            {{48, 102, -102}, {103, 103, 156}, {104, 122, 61}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{62, 62, 157}, },
            {},
            {{48, 100, -37}, {101, 101, 158}, {102, 122, 61}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 100, -37}, {101, 101, 159}, {102, 122, 61}, },
            {{48, 109, -68}, {110, 110, 160}, {111, 122, 61}, },
            {{48, 122, -25}, },
            {},
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
        }
        { // HTML_SCOPE
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {34, 34, 5}, {45, 45, 6}, {48, 48, 7}, {49, 57, 8}, {59, 59, 9}, {60, 60, 10}, {61, 61, 11}, {62, 62, 12}, {65, 90, 13}, {93, 93, 14}, {95, 95, 15}, {97, 104, 13}, {105, 105, 16}, {106, 114, 13}, {115, 115, 17}, {116, 122, 13}, },
            {{9, 9, 1}, {10, 10, 18}, {13, 13, 19}, {32, 32, 4}, },
            {{9, 32, -3}, },
            {{9, 9, 1}, {10, 10, 20}, {13, 32, -3}, },
            {{9, 32, -3}, },
            {{0, 33, 21}, {34, 34, 22}, {35, 91, 21}, {92, 92, 23}, {93, 65535, 21}, },
            {{49, 57, 24}, },
            {},
            {{48, 57, 25}, },
            {},
            {{33, 33, 26}, {47, 47, 27}, {91, 91, 28}, {104, 104, 29}, },
            {},
            {},
            {{48, 57, 30}, {65, 90, 31}, {95, 95, 32}, {97, 122, 31}, },
            {{62, 62, 33}, },
            {{48, 122, -15}, },
            {{48, 95, -15}, {97, 109, 31}, {110, 110, 34}, {111, 122, 31}, },
            {{48, 95, -15}, {97, 100, 31}, {101, 101, 35}, {102, 122, 31}, },
            {{9, 32, -3}, },
            {{9, 9, 1}, {10, 10, 36}, {13, 32, -3}, },
            {{9, 32, -3}, },
            {{0, 65535, -7}, },
            {},
            {{0, 33, 21}, {34, 34, 37}, {35, 65535, -7}, },
            {{48, 57, 38}, },
            {{48, 57, 25}, },
            {{45, 45, 39}, },
            {{104, 104, 40}, },
            {},
            {{116, 116, 41}, },
            {{48, 122, -15}, },
            {{48, 122, -15}, },
            {{48, 122, -15}, },
            {},
            {{48, 95, -15}, {97, 111, 31}, {112, 112, 42}, {113, 122, 31}, },
            {{48, 95, -15}, {97, 107, 31}, {108, 108, 43}, {109, 122, 31}, },
            {{9, 32, -3}, },
            {{0, 65535, -7}, },
            {{48, 57, 38}, },
            {{45, 45, 44}, },
            {{116, 116, 45}, },
            {{109, 109, 46}, },
            {{48, 95, -15}, {97, 116, 31}, {117, 117, 47}, {118, 122, 31}, },
            {{48, 100, -19}, {101, 101, 48}, {102, 122, 31}, },
            {{0, 44, 49}, {45, 45, 50}, {46, 65535, 49}, },
            {{109, 109, 51}, },
            {{108, 108, 52}, },
            {{48, 95, -15}, {97, 115, 31}, {116, 116, 53}, {117, 122, 31}, },
            {{48, 95, -15}, {97, 98, 31}, {99, 99, 54}, {100, 122, 31}, },
            {{0, 65535, -46}, },
            {{0, 44, 55}, {45, 45, 56}, {46, 61, 55}, {63, 65535, 55}, },
            {{108, 108, 57}, },
            {{62, 62, 58}, },
            {{48, 122, -15}, },
            {{48, 115, -49}, {116, 116, 59}, {117, 122, 31}, },
            {{0, 44, 60}, {45, 45, 61}, {46, 65535, 60}, },
            {{0, 44, 55}, {45, 45, 62}, {46, 65535, -52}, },
            {{62, 62, 63}, },
            {},
            {{48, 122, -15}, },
            {{0, 65535, -57}, },
            {{0, 44, 55}, {45, 45, 64}, {46, 65535, -52}, },
            {{0, 61, -58}, {62, 62, 65}, {63, 65535, 55}, },
            {},
            {{0, 44, 55}, {45, 45, 66}, {46, 65535, -52}, },
            {},
            {{0, 61, -66}, {62, 65535, -64}, },
        }
        { // WHATEVER_SCOPE
            {{0, 59, 1}, {60, 60, 2}, {61, 61, 1}, {63, 65535, 1}, },
            {{0, 59, 1}, {61, 65535, -2}, },
            {{47, 47, 3}, {91, 91, 4}, },
            {{104, 104, 5}, },
            {},
            {{116, 116, 6}, },
            {{109, 109, 7}, },
            {{108, 108, 8}, },
            {{62, 62, 9}, },
            {},
        }
        { // HTML_TAG_SCOPE
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {34, 34, 5}, {48, 48, 6}, {49, 57, 7}, {61, 61, 8}, {62, 62, 9}, {65, 90, 10}, {95, 95, 11}, {97, 109, 10}, {110, 110, 12}, {111, 113, 10}, {114, 114, 13}, {115, 115, 10}, {116, 116, 14}, {117, 122, 10}, },
            {{9, 9, 1}, {10, 10, 15}, {13, 13, 16}, {32, 32, 4}, },
            {{9, 32, -3}, },
            {{9, 9, 1}, {10, 10, 17}, {13, 32, -3}, },
            {{9, 32, -3}, },
            {{0, 33, 18}, {34, 34, 19}, {35, 91, 18}, {92, 92, 20}, {93, 65535, 18}, },
            {},
            {{48, 57, 21}, },
            {},
            {},
            {{48, 57, 22}, {65, 90, 23}, {95, 95, 24}, {97, 122, 23}, },
            {{48, 122, -12}, },
            {{48, 95, -12}, {97, 97, 25}, {98, 122, 23}, },
            {{48, 95, -12}, {97, 97, 26}, {98, 122, 23}, },
            {{48, 95, -12}, {97, 100, 23}, {101, 101, 27}, {102, 120, 23}, {121, 121, 28}, {122, 122, 23}, },
            {{9, 32, -3}, },
            {{9, 9, 1}, {10, 10, 29}, {13, 32, -3}, },
            {{9, 32, -3}, },
            {{0, 65535, -7}, },
            {},
            {{0, 33, 18}, {34, 34, 30}, {35, 65535, -7}, },
            {{48, 57, 21}, },
            {{48, 122, -12}, },
            {{48, 122, -12}, },
            {{48, 122, -12}, },
            {{48, 95, -12}, {97, 108, 23}, {109, 109, 31}, {110, 122, 23}, },
            {{48, 95, -12}, {97, 99, 23}, {100, 100, 32}, {101, 122, 23}, },
            {{48, 95, -12}, {97, 119, 23}, {120, 120, 33}, {121, 122, 23}, },
            {{48, 95, -12}, {97, 111, 23}, {112, 112, 34}, {113, 122, 23}, },
            {{9, 32, -3}, },
            {{0, 65535, -7}, },
            {{48, 100, -16}, {101, 101, 35}, {102, 122, 23}, },
            {{48, 95, -12}, {97, 104, 23}, {105, 105, 36}, {106, 122, 23}, },
            {{48, 95, -12}, {97, 115, 23}, {116, 116, 37}, {117, 122, 23}, },
            {{48, 100, -16}, {101, 101, 38}, {102, 122, 23}, },
            {{48, 122, -12}, },
            {{48, 95, -12}, {97, 110, 23}, {111, 111, 39}, {112, 122, 23}, },
            {{48, 122, -12}, },
            {{48, 122, -12}, },
            {{48, 122, -12}, },
        }
        { // HOLE_SCOPE
            {{65, 90, 1}, {93, 93, 2}, {95, 95, 3}, {97, 122, 1}, },
            {{48, 57, 4}, {65, 90, 5}, {95, 95, 6}, {97, 122, 5}, },
            {{62, 62, 7}, },
            {{48, 122, -3}, },
            {{48, 122, -3}, },
            {{48, 122, -3}, },
            {{48, 122, -3}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // WIG_SCOPE
        {63, 63, 62, 62, 63, 53, -1, 58, -1, 41, 42, 56, 55, 45, 54, 61, 57, 24, 24, 34, 35, 33, 36, 64, 43, -1, 44, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 31, -1, 32, 63, 63, 62, 50, -1, 65, -1, 59, -1, -1, 24, -1, 48, 51, -1, 49, 52, 64, 64, 64, 46, 47, 64, 64, 64, 64, 64, 64, 9, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 60, 63, 65, -1, -1, -1, 40, 40, -1, -1, 64, 64, 64, 64, 64, 64, 14, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, -1, 40, 40, -1, -1, 15, 64, 10, 7, 64, 2, 12, 64, 64, 64, 64, 64, 6, 64, 19, 64, 17, 64, -1, -1, -1, -1, 1, 20, 64, 64, 64, 64, 64, 64, 18, 11, -1, 3, 64, 8, 4, 64, 64, 16, 22, 13, 0, 5, },
        // HTML_SCOPE
        {63, 63, 62, 62, 63, -1, -1, 24, 24, 34, 35, 33, 36, 64, -1, 64, 64, 64, 63, 63, 62, -1, 65, -1, 25, 24, -1, 37, 38, -1, 64, 64, 64, 39, 64, 64, 63, 65, 25, -1, -1, -1, 64, 64, -1, -1, -1, 64, 64, -1, -1, -1, -1, 23, 64, -1, -1, -1, 3, 26, -1, -1, -1, 22, -1, 21, -1, },
        // WHATEVER_SCOPE
        {66, 66, 35, 37, 38, -1, -1, -1, -1, 22, },
        // HTML_TAG_SCOPE
        {63, 63, 62, 62, 63, -1, 24, 24, 33, 36, 64, 64, 64, 64, 64, 63, 63, 62, -1, 65, -1, 24, 64, 64, 64, 64, 64, 64, 64, 63, 65, 64, 64, 64, 64, 28, 64, 29, 27, 30, },
        // HOLE_SCOPE
        {-1, 64, -1, 64, 64, 64, 64, 39, },

    };*/

    public static class State
    {
        public final static State WIG_SCOPE = new State(0);
        public final static State HTML_SCOPE = new State(1);
        public final static State WHATEVER_SCOPE = new State(2);
        public final static State HTML_TAG_SCOPE = new State(3);
        public final static State HOLE_SCOPE = new State(4);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
